Opis klas:
	Position:
		pozycja x,y w miescie
		Pola:
			x
			y
			
	MovingObject:
		klasa reprezentująca obiekt poruszający się (pojazd, pieszy)
		Pola:
			Position
			speed [m/s]
			
	Vehicle : MovingObject
		Samochód / ciężarówka
		Pola:
			width [m]
			acceleration [m/s^2]
			slowdown [m/s^2]
			color	- zalezny od predkosci
			type 	- osobowy/ciezarowka
			
	Pedestrian : MovingObject
		Pola:
			name
			Parking home - identyfikator "domowego" parkingu
			
	Camera
		podaja wspolrzedne obiektow w swoim polu widzenia
		Pola:
			accuracy
			viewAngle
			Position
	
	Vertex
		abstrakcyjny wierzcholek grafu
		Pola:
			Position
			id
	
	Intersection : Vertex
		skrzyzowanie 
		Pola:
			enum Type
			boolean streetLight
			
	Parking : Vertex, Plot
		Pola:
			TrafficGenerator
			capacity
			Type - domowy/pracowy
			
	Plot
		abstrakcyjne pole w mieście (Budynek/Parking)
		Pola:
			startPosition
			endPosition
			
	Building : Plot
		budynek sluzacy do zaslaniania kamery
		Pola:
			height
	
	TrafficGenerator
		klasa do generowania ruchu dla danego parkingu
			
	SidewalkVertex : Vertex
		wierzcholek grafu dla pieszych
			
	Edge
		abstrakcyjna klasa reprezentująca krawedz grafu
		Pola:
			width
			pair<Vertex,Vertex>
	
	Sidewalk : Edge
		chodnik
			
	Street : Edge
		ulica
		Pola:
			maxSpeed
			boolean sidewalk
			direction (N,E,W,S)
		
	Crossing : Edge
		pasy dla pieszych
		Pola:
			availability - czy mozna przechodzic czy nie, zalezne od swiatel
			
	
klasy z boosta: 
	adjacency_list
	graph_traits
graf główny (ruch pojazdów): 
	wierzchołki: Intersection, Parking
	krawędzie: Street z flaga z lub bez Sidewalk
graf dla pieszych (generowany z grafu głównego):
	wierzchołki: SidewalkVertex, Parking
	krawędzie: Crossing, Sidewalk
tablica zajętości dla każdego Street z lista Vehicle
graf na skręty żeby pojazd wiedział jaką operację ma wykonać 
	(skręt w prawo/lewo/na wprost) na danym skrzyżowaniu jak chce jechać do wierzchołka X
